def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply plugin: 'com.google.ar.sceneform.plugin'

android {
    compileSdkVersion 28

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.minato.pokeapp"
        minSdkVersion 24
        targetSdkVersion 28
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName

        ndk {
            /*
            * Sceneform is available for the following ABIs: arm64-v8a, armv7a,
            * x86_64 and x86. This sample app enables arm64-v8a to run on
            * devices and x86 to run on the emulator. Your application should
            * list the ABIs most appropriate to minimize APK size (arm64-v8a recommended).
            */
            abiFilters 'arm64-v8a', 'x86'
        }
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.google.ar.sceneform.ux:sceneform-ux:1.13.0'
    implementation 'com.google.ar.sceneform:core:1.13.0'
    implementation 'com.google.ar:core:1.13.0'
}
sceneform.asset('sampledata/stitch-free/scene.gltf',
        'default',
        'sampledata/stitch-free/scene1.sfa',
        'src/main/assets/sceneModel')

sceneform.asset('sampledata/Cube/scene.gltf',
        'default',
        'sampledata/Cube/scene2.sfa',
        'src/main/assets/cubeModel')

sceneform.asset('sampledata/Anubis Statue/scene.gltf',
        'default',
        'sampledata/Anubis Statue/scene3.sfa',
        'src/main/assets/statueModel')
